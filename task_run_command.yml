
- name: Run command
  block:
  - name: Initialize a session with device named {{ item }}
    uri:
      url: "{{ CSAPIURL | default('https://api.crowdstrike.com') }}/real-time-response/entities/sessions/v1"
      method: POST
      headers:
        accept: application/json
        Authorization: "Bearer {{ jwt }}"
      body_format: json
      body:
        device_id: "{{ hostvars[item].device_id }}"
        #origin: "string"
        queue_offline: "{{ queue_offline }}"
      timeout: 60
      status_code:
       - 201
       - -1
       - 404
    register: session
  - name: Print the session
    ansible.builtin.debug:
      msg:
      - "{{ session.json.errors }}"
    when: session.json is defined
  - name: Run command in session
    uri:
      url: "{{ CSAPIURL | default('https://api.crowdstrike.com') }}/real-time-response/entities/admin-command/v1"
      method: POST
      headers:
        accept: application/json
        Authorization: "Bearer {{ jwt }}"
      body_format: json
      body:
        base_command: runscript
        session_id: "{{ session.json.resources[0].session_id }}"
        command_string: "runscript -Raw=```{{ command }}```"
        #command_string: "runscript -Raw=```cmd /c echo hello>hello.txt```"
      timeout: 60
      status_code:
        - 201
        - -1
    register: response
    when:
    - session.json is defined
    - session.json.errors == None
  - name: Print the response
    ansible.builtin.debug:
      msg:
        - "{{ response.json.resources }}"
        - "{{ response.json.errors }}"
    when: response.json is defined
  rescue:
  - name: Authenticate
    include_tasks: task_auth.yml
  - name: Store JWT
    set_fact:
      jwt: "{{ response.json.access_token }}"